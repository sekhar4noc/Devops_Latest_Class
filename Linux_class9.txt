===>Process mgmt

process means, its a piece of code -->collection of packages --> software

to execute a software on top of OS to make it as a running state that we can call it as a process/service.

example: yum install apache*

commands:
========
atjobs
cron jobs
ps
service/systemctl
top

====

systemctl: to administer the process/service.

syn: systemctl <state: start/stop/restart/enable/disable>  <service name>  

example:

   systemctl  stop/start/restart/status apache

[root@ip-172-31-28-28 ~]# systemctl httpd status
Unknown operation 'httpd'.
[root@ip-172-31-28-28 ~]# systemctl status httpd
● httpd.service - The Apache HTTP Server
   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)
   Active: inactive (dead)
     Docs: man:httpd.service(8)
[root@ip-172-31-28-28 ~]# systemctl start httpd
[root@ip-172-31-28-28 ~]# systemctl status httpd
● httpd.service - The Apache HTTP Server
   Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset: disabled)
   Active: active (running) since Fri 2022-09-30 14:00:49 UTC; 4s ago
     Docs: man:httpd.service(8)
 Main PID: 2709 (httpd)
   Status: "Processing requests..."
   CGroup: /system.slice/httpd.service
           ├─2709 /usr/sbin/httpd -DFOREGROUND
           ├─2710 /usr/sbin/httpd -DFOREGROUND
           ├─2711 /usr/sbin/httpd -DFOREGROUND
           ├─2712 /usr/sbin/httpd -DFOREGROUND
           ├─2713 /usr/sbin/httpd -DFOREGROUND
           └─2714 /usr/sbin/httpd -DFOREGROUND

differences between stop/start/restart:
==============
stop/start : there wil be a downtime for the process/service
restart    : there will be a downtie but its in a fractions of milli seconds.
reload     : there will be no downtime -- the changes has to be reflect at software level.


=======> ps(process)
to check the processes in a machine.

command: ps
syn: ps <options> <processname/ID>
Example: 

To see every process on the system using standard syntax:
          ps -e
          ps -ef
          ps -eF
          ps -ely

       To see every process on the system using BSD syntax:
          ps ax
          ps axu

       To print a process tree:
          ps -ejH
          ps axjf

       To get info about threads:
          ps -eLf
          ps axms

=========top: it can check about the system performance/statistics

command: top

nice scale;  -20 to +20
lower value cangive higher priority for to utilize the system resources.
higher value can give less priority for to utilize the system resources.

nice -n -19 httpd/PID

EXAMPLE:

[root@ip-172-31-28-28 ~]# renice 8 2709
2709 (process ID) old priority 0, new priority 8
[root@ip-172-31-28-28 ~]# renice -19 2709
2709 (process ID) old priority 8, new priority -19


